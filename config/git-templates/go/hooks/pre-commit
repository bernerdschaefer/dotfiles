#!/bin/bash
#
# pre-commit hook which verifies that changes are formatted w/ gofmt and pass
# go vet.

function checkfmt() {
  unformatted=$(gofmt -l $*)
  [ -z "$unformatted" ] && return 0

  echo >&2 "Go files must be formatted with gofmt. Please run:"
  for fn in $unformatted; do
    echo >&2 "  gofmt -w $PWD/$fn"
  done

  return 1
}

function checkvet() {
  # build grep regex filter from gofiles
  for f in $*; do
    [ -z "$filter" ] && filter=$f || filter="$filter\|$f"
  done

  # go vet does not support checking individual files across packages; so
  # instead we vet all files, and ignore errors for files not included in this
  # change-set.
  unvetted=$(go vet ./... 2>&1 | grep "^\($filter\)")
  [ -z "$unvetted" ] && return 0

  echo >&2 "Go files must be vetted. Check these problems:"
  IFS=$'\n'
  for line in $unvetted; do
    echo >&2 "  $line"
  done
  unset IFS

  return 1
}

# find all changed go files
gofiles=$(git diff --cached --name-only --diff-filter=ACM | grep '.go$')
[ -z "$gofiles" ] && exit 0

checkfmt $gofiles || fail=yes
checkvet $gofiles || fail=yes

[ -z "$fail" ] || exit 1
